- name: Bootstrap a Kubernetes Cluster Node
  hosts: all-nodes
  become: yes
  vars_files:
    - ../group_vars/login.yaml
    - ../group_vars/checkmk.yaml
    - ../passwd.yml
    - "../host_vars/{{ inventory_hostname }}.yaml"
  tasks:
  - name: Set Time
    timezone:
      name: Europe/London

  - name: Create Alistair's User
    user:
            name: agrant
            uid: 1003
            groups: wheel
            password: $6$2fB3enTpgpSbjYtN$ZI2eJrb4hNHyA5s5ckWTwW.GoX8wM8bKE53iQiwb67D8NR4ppfIjVX.3wR78ukPGxOP42At6gSoIAtH5b/8bA0
            create_home: yes
            home: /home/agrant
            shell: /bin/bash
            state: present


  - name: HPCSys User
    user:
            name: hpcsys
            uid: 1002
            groups: wheel
            password: $6$nBu.ucWVaPhnMEUU$ISOw1jMlBxownk5Qj9SZ200OjBmcavxzNSi9j8cpuW9MUiEim6n6iMMuiS8n4Je3qmJpSHPElsOMO4e8KkWXT1
            create_home: yes
            home: /home/hpcsys
            shell: /bin/bash
            state: present

  - name: Create .ssh dir for hpcsys
    file:
            path: /home/hpcsys/.ssh
            state: directory
            owner: hpcsys
            group: hpcsys
            mode: 0700
  - name: Create authorized_keys file for hpcsys
    file:
            path: /home/hpcsys/.ssh/authorized_keys
            owner: hpcsys
            group: hpcsys
            state: touch
            mode: 0600

  - name: Allow SSHD Password Login
    lineinfile:
      path: /etc/ssh/sshd_config.d/50-cloud-init.conf
      regexp: '^PasswordAuthentication'
      line: PasswordAuthentication yes

  - name: Allow eidf-support01 hpcsys pubkey login
    lineinfile:
      path: /home/hpcsys/.ssh/authorized_keys
      line: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzhbeKUUwjoKBPSCyIoHdWqDvUGbD1FI+M7RzuISLCXXk4JkcMD6q4gzpxpOrobzYvuXDpj0is18WlzX72GrQlozqlJWOsPH/W2k92sCzFfeuUnZiUqJbHPhNL7josrN5zxkZ/KXCrFLdlsceuTkKGvyF/hgFOT7u4/v2W8g14izY8KEbX18A9pB+JVYYKXg1zaVN+b5omd49avkmGALp/fKGEWiJXuJdjm39PGn7/amvIWXadyxYAVZkteN49um0PBBs2i+OVYrqmuFmAhb0PdiYXwKq7WkBeirv9H95tGy0Z592WWVggJnHVqpeGG/P4qkrDAwbJjgphV/yCLuzCjhtjV0N836Z0SnWSfftK4NtrGBMO34vn1eo9p894bhTV5+pHvS6pq5DbrSHcfwK6NlKvPcwocspL4E05qAreVXj6bWixeLRcrrr45DGt17+la/gWtHv5kn1Qc7mFfWBex6b1y5bNXwCaMNTPIZAa4KDp1cEWhzLHR5sJxnnE/Hk= hpcsys@eidf-support01.eidf.epcc.ed.ac.uk
      state: present

  - name: Restart SSHD
    service:
      name: sshd
      state: restarted

  - name: Remove DHCP Bootproto
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-{{ mgmt_interface }}
      regexp: '^BOOTPROTO'
      line: BOOTPROTO=none
 
  - name: Set Static IP and remove Autoconnect Priority
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-{{ mgmt_interface }}
      regexp: '^AUTOCONNECT_PRIORITY'
      line: IPADDR={{ ip_address }}

  - name: Add Prefix for Static IP
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-{{ mgmt_interface }}
      insertafter: IPADDR={{ ip_address }}
      line: PREFIX=23

  - name: Get production interface names
    shell: "ip a | grep 'master bond0' | awk '{ print $2 }' | grep en | rev | cut -c2- | rev | head -n 1"
    register: firstprodinterface

  - name: Get production interface names
    shell: "ip a | grep 'master bond0' | awk '{ print $2 }' | grep en | rev | cut -c2- | rev | tail -n 1"
    register: secondprodinterface

  - name: Change MTU of prod interfaces
    lineinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-{{ item }}
      regexp: '^MTU=1500'
      line: MTU=9000
    with_items:
      - bond0
      - bond0.3071
      - bond0.3091
      - bond0-br3091
      - "{{ firstprodinterface.stdout }}"
      - "{{ secondprodinterface.stdout }}"
    tags: mtu

  - name: Update Resolv.conf
    lineinfile:
      path: /etc/resolv.conf
      regexp: '^nameserver'
      line: nameserver 129.215.205.191

  - name: Remove MAAS DNF Proxy
    lineinfile:
      path: /etc/dnf/dnf.conf
      regexp: '^proxy'
      state: absent

  - name: Remove MAAS YUM Proxy
    lineinfile:
      path: /etc/yum.conf
      regexp: '^proxy'
      state: absent

  - name: Restart Network Manager
    service:
      name: NetworkManager
      state: restarted

  - name: Pause for Network Manager to restart
    pause:
      seconds: 10

  - name: Refresh network
    shell: nmcli networking off && nmcli networking on

  - name: Install CheckMK
    include_tasks: ~/ansible/CheckMK/roles/install-checkmk.yaml
    tags: checkmk

  - name: Add Host to CheckMK
    include_tasks: ../roles/checkmk/tasks/add-host.yaml
    tags: checkmk

  - name: Install and configure Chrony
    include_tasks: ../roles/chrony/tasks/install-chrony.yaml

  - name: Check if boot partition has been created
    shell: "efibootmgr | grep sdb1"
    register: sdb1_stat
    ignore_errors: true
    when:
      - inventory_hostname in groups["a100-4gpu"]
    tags: bootpartition

  - debug:
      var: sdb1_stat.stdout
    when:
      - inventory_hostname in groups["a100-4gpu"]
    tags: bootpartition
  
  - debug:
      msg:
      - "Will create partition second boot partition"
    when:
      - inventory_hostname in groups["a100-4gpu"]
      - sdb1_stat.stdout == ''
    tags: bootpartition

  - name: Copy SDA1 to SDB1 on 4-GPU nodes
    command: dd if=/dev/sda1 of=/dev/sdb1
    when: 
      - inventory_hostname in groups["a100-4gpu"]
      - sdb1_stat.stdout == ''
    tags: bootpartition

  - name: Create new efibootmgr entry on 4-GPU Nodes
    command: efibootmgr --create --disk /dev/sdb --part 1 --label "Rocky Linux (sdb1)" --loader '\EFI\rocky\grubx64.efi'
    when:
      - inventory_hostname in groups["a100-4gpu"]
      - sdb1_stat.stdout == ''
    tags: bootpartition

  - name: Update
    include_tasks: ../roles/common/tasks/update.yaml
    tags: update

  - name: Install Packages
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - pciutils
      - traceroute
      - net-tools
      - unzip

  - name: Reboot
    include_tasks: ../roles/common/tasks/reboot.yaml
    tags: reboot
       
  - name: Verify Bond Speed
    shell: "ethtool bond0 | grep Speed"
    register: bondspeed
    tags: verifyspeed

  - debug:
      msg: "Speed is good ( {{ bondspeed.stdout }} )"
    when: '"200000Mb/s" in bondspeed.stdout'
    tags: verifyspeed
